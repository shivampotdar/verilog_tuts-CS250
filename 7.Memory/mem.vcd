$date
	Sun Mar  8 20:33:13 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_mem1k $end
$var wire 8 ! data_out [7:0] $end
$var reg 1 " clk $end
$var reg 1 # cs $end
$var reg 8 $ data_in [7:0] $end
$var reg 1 % rd $end
$var reg 10 & read_address [9:0] $end
$var reg 1 ' wr $end
$var reg 10 ( write_address [9:0] $end
$scope module MEMORY $end
$var wire 1 " clk $end
$var wire 1 # cs $end
$var wire 8 ) data_in [7:0] $end
$var wire 8 * data_out [7:0] $end
$var wire 1 % rd $end
$var wire 10 + read_address [9:0] $end
$var wire 1 ' wr $end
$var wire 10 , write_address [9:0] $end
$var reg 8 - d_out [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
b0 ,
b0 +
bx *
b0 )
b0 (
0'
b0 &
0%
b0 $
1#
0"
bx !
$end
#5
1"
#10
0"
1'
1%
#15
1"
#20
0"
b1001 $
b1001 )
b1011100101 (
b1011100101 ,
b100100100 &
b100100100 +
#25
b0 !
b0 *
b0 -
1"
#30
0"
b10001101 $
b10001101 )
b1101110001 (
b1101110001 ,
b1001100011 &
b1001100011 +
#35
1"
#40
0"
b1 $
b1 )
b1001110110 (
b1001110110 ,
b1100101 &
b1100101 +
#45
1"
#50
0"
b111101 $
b111101 )
b111011010 (
b111011010 ,
b100001101 &
b100001101 +
#55
1"
#60
0"
b11111001 $
b11111001 )
b1111110000 (
b1111110000 ,
b1111101101 &
b1111101101 +
#65
1"
#70
0"
b10101010 $
b10101010 )
b100101001 (
b100101001 ,
b11000110 &
b11000110 +
#75
1"
#80
0"
b10010 $
b10010 )
b1011011011 (
b1011011011 ,
b1111100101 &
b1111100101 +
#85
1"
#90
0"
b11001110 $
b11001110 )
b1001010110 (
b1001010110 ,
b1110001111 &
b1110001111 +
#95
1"
#100
0"
b1011100 $
b1011100 )
b1100101001 (
b1100101001 ,
b1011101000 &
b1011101000 +
#105
1"
#110
0"
b1100101 $
b1100101 )
b10010001 (
b10010001 ,
b10111101 &
b10111101 +
#115
1"
#120
0"
b10000000 $
b10000000 )
b1101101110 (
b1101101110 ,
b1001100011 &
b1001100011 +
#125
1"
#130
0"
b10011101 $
b10011101 )
b1000001110 (
b1000001110 ,
b100100000 &
b100100000 +
#135
1"
#140
0"
b1101 $
b1101 )
b1110111 (
b1110111 ,
b1010010110 &
b1010010110 +
#145
1"
#150
0"
b11010101 $
b11010101 )
b111001111 (
b111001111 ,
b1001010011 &
b1001010011 +
#155
1"
#160
0"
b11101 $
b11101 )
b1100010010 (
b1100010010 ,
b1000000010 &
b1000000010 +
#165
1"
#170
0"
b1010 $
b1010 )
b110000111 (
b110000111 ,
b1011001111 &
b1011001111 +
#175
1"
#180
0"
b11110010 $
b11110010 )
b10100000 (
b10100000 ,
b1011001010 &
b1011001010 +
#185
1"
#190
0"
b11011000 $
b11011000 )
b1110100101 (
b1110100101 ,
b110001010 &
b110001010 +
#195
1"
#200
0"
b11101011 $
b11101011 )
b1011101101 (
b1011101101 ,
b1101111000 &
b1101111000 +
#205
1"
#210
0"
b10101110 $
b10101110 )
b1000101010 (
b1000101010 ,
b110110110 &
b110110110 +
#215
1"
#220
0"
b1010111100 (
b1010111100 ,
b1010111100 &
b1010111100 +
#225
bx !
bx *
bx -
1"
#230
0"
#235
1"
#240
0"
#245
1"
#250
0"
